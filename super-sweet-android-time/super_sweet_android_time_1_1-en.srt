1
00:00:00,000 --> 00:00:04,149
Our Candy Coded store sells sweet treats galore.

2
00:00:04,150 --> 00:00:06,877
How do we get it on the map?

3
00:00:06,878 --> 00:00:10,584
Let's build a sugar-coated Android app!

4
00:00:10,585 --> 00:00:13,940
With tasty layouts and views,

5
00:00:13,941 --> 00:00:16,674
full of delicious candy hues,

6
00:00:16,675 --> 00:00:26,919
our users will be overjoyed by our super sweet apps powered with Android.

7
00:00:26,920 --> 00:00:31,619
Hi, I'm Sarah Holderness, and welcome to Super Sweet Android Time.

8
00:00:31,620 --> 00:00:37,390
This course is a continuation of the concepts taught in the Try Android course.

9
00:00:37,391 --> 00:00:41,933
In that course we created a candy store app called Candy Coded,

10
00:00:41,934 --> 00:00:47,076
and we learned how to create an activity layout, add images and an

11
00:00:47,077 --> 00:00:51,657
ImageView, add data to a ListView with an adapter,

12
00:00:51,658 --> 00:00:54,904
create an event listener, and display a toast.

13
00:00:54,905 --> 00:00:58,192
Let's jump over to Android Studio to take a brief look at that

14
00:00:58,193 --> 00:01:02,458
project as a refresher.

15
00:01:02,459 --> 00:01:06,940
Our app starts by launching the main activity, which happens by

16
00:01:06,941 --> 00:01:12,042
calling this onCreate method in the MainActivity class.

17
00:01:12,043 --> 00:01:14,869
Then one of the first things it does is set the view to the

18
00:01:14,870 --> 00:01:19,449
activity_main layout, which is where we designed what our user

19
00:01:19,450 --> 00:01:24,299
interface was going to look like.  Then back in our Java code,

20
00:01:24,300 --> 00:01:29,556
we created an ArrayList of candy names and an ArrayAdapter to

21
00:01:29,557 --> 00:01:35,002
populate our ListView in our app.  We also displayed some pop-up

22
00:01:35,003 --> 00:01:43,793
messages, or toasts, when the app started and when a ListItem was clicked.

23
00:01:43,794 --> 00:01:46,778
The app we're going to build in this course is going to add more

24
00:01:46,779 --> 00:01:50,906
features to our Candy Coded app, like launching other activities

25
00:01:50,907 --> 00:01:56,158
with intents, network requests, using the constraint layout system,

26
00:01:56,159 --> 00:02:00,180
and storing data in a database.  If you want to follow along on your

27
00:02:00,181 --> 00:02:03,470
own computer you can download the finished project from the Try

28
00:02:03,471 --> 00:02:08,226
Android course at the link listed here, or you can follow along with

29
00:02:08,227 --> 00:02:14,123
our interactive challenges at the end of each section.

30
00:02:14,124 --> 00:02:18,049
In level 1 we're going to start off creating a new activity and

31
00:02:18,050 --> 00:02:26,406
launching it with an intent.  Right now in our app we show a list of candies.

32
00:02:26,407 --> 00:02:30,634
We want to be able to click on a candy and see details about it.

33
00:02:30,635 --> 00:02:34,817
To do that we're going to create a separate detail activity to show

34
00:02:34,818 --> 00:02:39,768
an image, description, and price, and this activity will start when

35
00:02:39,769 --> 00:02:44,074
an item is clicked.  To get started, let's jump over to Android

36
00:02:44,075 --> 00:02:48,662
Studio to see how to create a new activity.

37
00:02:48,663 --> 00:02:52,532
To create a new activity, we can right-click the java folder in the

38
00:02:52,533 --> 00:02:59,007
project window and select New, Activity, Empty Activity.

39
00:02:59,008 --> 00:03:03,141
We'll name our activity DetailActivity, and we want to generate a

40
00:03:03,142 --> 00:03:07,492
layout file with the name activity_detail, and we can leave our

41
00:03:07,493 --> 00:03:13,745
package name and click Finish.  This will generate our

42
00:03:13,746 --> 00:03:17,961
DetailActivity.java file that looks very similar to the starting

43
00:03:17,962 --> 00:03:24,336
code in MainActivity.java with just an onCreate method.

44
00:03:24,337 --> 00:03:31,485
Then in the res/layout folder, we can see the activity_detail.xml

45
00:03:31,486 --> 00:03:38,226
file that was created.  This has a constraint layout with nothing in it.

46
00:03:38,227 --> 00:03:43,040
We'll go ahead and add a TextView that says Detail Activity for now

47
00:03:43,041 --> 00:03:48,090
so that we'll know when we launch this Detail Activity screen in our app.

48
00:03:48,091 --> 00:03:54,824
Let's also name this TextView text_view_name so we can find it and

49
00:03:54,825 --> 00:03:59,330
use it to display the candy name later.

50
00:03:59,331 --> 00:04:04,466
Now we want this screen to show whenever we click on an item in our ListView.

51
00:04:04,467 --> 00:04:11,475
So if we go to our onItemClickListener method in MainActivity.java,

52
00:04:11,476 --> 00:04:15,703
we're going to remove this code to display a toast and instead add

53
00:04:15,704 --> 00:04:19,679
our code to display the detail activity.

54
00:04:19,680 --> 00:04:22,855
Let's jump back over to the slides to see what code we'll put here

55
00:04:22,856 --> 00:04:27,247
to launch our detail activity.

56
00:04:27,248 --> 00:04:31,721
We need an intent to be able to launch our new detail activity.

57
00:04:31,722 --> 00:04:35,968
An intent requests an action from another app component,

58
00:04:35,969 --> 00:04:40,206
and there are two types of intents.  Explicit intents launch a

59
00:04:40,207 --> 00:04:44,961
specific app component, like the detail activity in this case.

60
00:04:44,962 --> 00:04:50,669
It's like the intent is saying, hey detail activity, it's time for you to start.

61
00:04:50,670 --> 00:04:55,356
The other type of intents are implicit.  They just declare an action

62
00:04:55,357 --> 00:04:59,374
they need, like sharing a website, and then the user can pick

63
00:04:59,375 --> 00:05:02,723
which app to use.  I'm sure you've seen this happen when you try

64
00:05:02,724 --> 00:05:07,435
to share something on your phone.

65
00:05:07,436 --> 00:05:11,739
We'll use an explicit intent to start the detail activity.

66
00:05:11,740 --> 00:05:16,223
When a user selects an item from our ListView, our item click listener

67
00:05:16,224 --> 00:05:21,729
will create an intent to launch the detail activity.

68
00:05:21,730 --> 00:05:25,547
Since we want the intent to start the activity after a click,

69
00:05:25,548 --> 00:05:29,642
we'll add that code to the click listener at the bottom of the

70
00:05:29,643 --> 00:05:34,954
onCreate method in MainActivity.java.  Previously we were showing a

71
00:05:34,955 --> 00:05:42,423
toast here, but we've deleted that code and will only start our detail activity.

72
00:05:42,424 --> 00:05:47,378
To create an intent, we use the new keyword with the Intent constructor

73
00:05:47,379 --> 00:05:50,578
and pass it the context of where we are creating this intent,

74
00:05:50,579 --> 00:05:56,150
which is inside this MainActivity class, and the component we want to

75
00:05:56,151 --> 00:06:00,080
create, which is the DetailActivity class.

76
00:06:00,081 --> 00:06:04,533
Then, the MainActivity can start another activity by calling the

77
00:06:04,534 --> 00:06:10,352
startActivity method, which takes our intent as a parameter.

78
00:06:10,353 --> 00:06:15,964
We'll put the code we just created inside our onItemClick callback method.

79
00:06:15,965 --> 00:06:21,662
Let's jump over to Android Studio to see what that looks like.

80
00:06:21,663 --> 00:06:26,164
In MainActivity.java, we have the code we just added at the bottom

81
00:06:26,165 --> 00:06:33,844
of our onCreate method inside our ListView's OnItemClickListener event.

82
00:06:33,845 --> 00:06:37,684
Let's watch this in action.  We click on a list item and we're

83
00:06:37,685 --> 00:06:43,008
shown the new detail activity screen that shows the text Detail Activity.

84
00:06:43,009 --> 00:06:47,442
Great!  Our intent is working.

85
00:06:47,443 --> 00:06:50,059
That's it for this section.  Now it's time for you to practice

86
00:06:50,060 --> 00:06:53,419
creating activities and intents in the challenges.

87
00:06:53,420 --> 01:00:00,000
Good luck.
