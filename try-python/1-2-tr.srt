1
00:00:02,009 --> 00:00:03,340
Tekrar hoş geldiniz.

2
00:00:03,340 --> 00:00:05,460
Bir hindistan cevizini
taşımak için

3
00:00:05,460 --> 00:00:07,410
kaç kırlangıç gerektiğini
hesapladık.

4
00:00:07,410 --> 00:00:09,810
Şimdi de bir kırlangıç

5
00:00:09,810 --> 00:00:12,560
başka hangi meyveleri taşıyabilir
buna bakalım.

6
00:00:12,560 --> 00:00:15,730
Aynı işlemi elma için
tekrarlayalım,


00:00:15,730 --> 00:00:19,500
6.4 kırlangıca ihtiacımız var.

8
00:00:19,500 --> 00:00:23,430
Kiraz için 0.4 kırlangıç
gerekir.

9
00:00:23,430 --> 00:00:24,030
Mükemmel!

10
00:00:24,030 --> 00:00:26,100
İşe yarayan bir tane bulduk.

11
00:00:26,100 --> 00:00:29,710
Bir kırlangıç bir kırazı taşıyabilir.

12
00:00:29,710 --> 00:00:33,440
Yine de , geriye dönüp
hesaplamalara baktığımızda,

13
00:00:33,440 --> 00:00:39,120
60'ı 3'e böldüğümüz işlemler
bir çok sefer göze çarpıyor.

14
00:00:39,120 --> 00:00:42,250
Bu işlemin sonucunu kaydedip,
gerektiğinde kullansak

15
00:00:42,250 --> 00:00:44,470
mükemmel olmaz mıydı?

16
00:00:44,470 --> 00:00:45,995
Bunu değişkenler yardımı ile yapabiliriz.

17
00:00:49,690 --> 00:00:53,750
Değişkenler bize ulaşabileceğimiz
bir katman ve

18
00:00:53,750 --> 00:00:55,000
erişim sağlayabileceğimiz bir 
bilgi sunarlar.

19
00:00:55,000 --> 00:00:56,950
Değişkenleri isimleriyle birlikte
oluştururuz ve

20
00:00:56,950 --> 00:00:59,510
ismi sol tarafa saklamak istediğimiz değer

21
00:00:59,510 --> 00:01:01,720
sağ tarafa gelir.

22
00:01:01,720 --> 00:01:04,560
Buna değer atama denir.

23
00:01:04,560 --> 00:01:06,530
Değişkenimizi oluşturduğumuzda,

24
00:01:06,530 --> 00:01:09,530
onu çağırarak değerimize ulaşabiliriz,

25
00:01:09,530 --> 00:01:12,690
böylelikle aynı işlemleri tekrar yapmayız,

26
00:01:12,690 --> 00:01:14,270
ve kodumuz daha düzenli olur.

27
00:01:17,200 --> 00:01:20,890
Kullanacağınız değerleri

28
00:01:20,890 --> 00:01:23,560
değişkenlere atamak kodunuzu 
daha okunabilir yapar.

29
00:01:23,560 --> 00:01:26,410
Eğer bu satırdaki koda
bakacak olursak, yaptığımız

30
00:01:26,410 --> 00:01:28,140
işlemlerin temiz gözükmediğini fark edeceğiz.

31
00:01:28,140 --> 00:01:31,040
Ama değişken kullanırsak, kiraz taşımak
için kaç kırlangıç gerektiğini

32
00:01:31,040 --> 00:01:33,770
hesapladığımızı çıkarımlayabiliriz

33
00:01:33,770 --> 00:01:37,750
ve daha sonra hesapladığımız
bu değişkeni çağırıp

34
00:01:37,750 --> 00:01:42,460
değerini kullanabiliriz.

35
00:01:42,460 --> 00:01:44,110
Değişken isimlendirirken
bazı kesin kurallara uyulmalıdır:

36
00:01:44,110 --> 00:01:46,950
değişken adında boşluk kullanamazsın

37
00:01:46,950 --> 00:01:50,020
ve sayı veya özel karakterle başlayamazsın.

38
00:01:50,020 --> 00:01:52,390
Gerisi sana kalmıştır.

39
00:01:52,390 --> 00:01:54,160
İşin büyük kısmı,
değişkenleri adlandırırken

40
00:01:54,160 --> 00:01:56,610
kısa ve öz,

41
00:01:56,610 --> 00:01:59,420
ama kodu okuyan kişinin


42
00:01:59,420 --> 00:02:02,890
anlayabileceği kadar da detaylı olmalı.

43
00:02:02,890 --> 00:02:05,510
Örneğin, değişkenimizi
<i>swallow_carrying_limit</i>

44
00:02:05,510 --> 00:02:07,670
şeklinde adlandırabilirdik.

45
00:02:07,670 --> 00:02:10,380
Ama daha kısa ve öz olması için

46
00:02:10,380 --> 00:02:13,240
swallow_limit olarak adlandırdık.

47
00:02:13,240 --> 00:02:17,850
Pep 8 küçük harf ve boşluk için
ise alt çizgi kullanmanızı

48
00:02:17,850 --> 00:02:20,490
öneren bir Python stil rehberidir.

49
00:02:20,490 --> 00:02:22,660
Eğer Python stilisti olmak istiyorsanız,

50
00:02:22,660 --> 00:02:25,110
bu öneriye uymanızı tavsiye ederiz.

51
00:02:25,110 --> 00:02:27,360
Bazı insanlar kelimeleri ayırmak

52
00:02:27,360 --> 00:02:30,960
için alt çizgi yerine büyük harfi kullanır

53
00:02:30,960 --> 00:02:35,430
çok bir fark yoktur, ama Pip 8

54
00:02:35,430 --> 00:02:36,180
yazım stili Python yazanlar arasında
daha çok kullanılmaktadır.

55
00:02:40,330 --> 00:02:43,370
Şimdi öğrendiklerimizi kırlangıç
problemine uyarlayalım

56
00:02:43,370 --> 00:02:47,560
ve kaç papağanın bir hindistan cevizini
taşıyabileceğini bulalım.

57
00:02:47,560 --> 00:02:50,350
İlk olarak, varsayımlarımızı saklayacağımız

58
00:02:50,350 --> 00:02:53,720
değişkenler tanımlayacağız: 
taşıyabilecekleri yüzde,

59
00:02:53,720 --> 00:02:59,360
hindistan cevizi ağırlığı ve 
papağan ağırlığı.

60
00:02:59,360 --> 00:03:03,470
Sonra papağanların taşıyabilecekleri
toplam ağırlığı 300 gram olarak hesaplayalım.

61
00:03:08,710 --> 00:03:12,340
Şimdi gerekli papağan sayısı kadar
değişken tanımlayabiliriz ve

62
00:03:12,340 --> 00:03:14,930
hindistan cevizi ağırlığını
papağanlarn taşıma kapasitesine

63
00:03:14,930 --> 00:03:20,100
bölerek 4.8 papağan gerekli 
olduğunu buluruz.

64
00:03:20,100 --> 00:03:25,000
Ama, 4.8 demek tam olmayan
bir papağınımız var.

65
00:03:25,000 --> 00:03:27,680
Eğer bu sayıyı 5 e yuvarlayabilseydik

66
00:03:27,680 --> 00:03:31,530
çok güzel olurduk, çünkü 
tam 5 kuş olmalı elimizde.

67
00:03:34,950 --> 00:03:37,590
Genellikle, Python dilinde
tanımlı olmayan

68
00:03:37,590 --> 00:03:39,680
fonksiyonları kullanmak isteyeceğiz.

69
00:03:39,680 --> 00:03:44,740
Şu an Python modül ve kütüphanelerini
kullanmak için mükemmel zaman.

70
00:03:44,740 --> 00:03:48,030
Bu modülü kullanmak için,
<i>import math</i> yazarak

71
00:03:48,030 --> 00:03:50,516
kodumuza eklememiz yeterli.

72
00:03:50,516 --> 00:03:54,220
Math modülü <i>ceil</i>
adında bir fonksiyona sahip, 
"ceiling"in (üst, tavan) kısaltması.

73
00:03:54,220 --> 00:03:58,180
Bu fonksiyon sayıyı yukarısındaki
en yakın tam sayıya yuvarlar.

74
00:03:58,180 --> 00:04:02,800
<i>math.seal</i> yazıp,
parantezlerin içine

75
00:04:02,800 --> 00:04:05,100
num_macaws değişkenini ekleyelim.

76
00:04:05,100 --> 00:04:07,590
Sonu olarak 5'i alacağız.

77
00:04:07,590 --> 00:04:10,940
<i>math</i> Python standar kütüphanelerinin
bir parçasıdır,

78
00:04:10,940 --> 00:04:13,800
yani Python ile birlikte hazır
kurulu gelir.

79
00:04:13,800 --> 00:04:16,230
Diğer Python modüllerini
görmek isterseniz,

80
00:04:16,230 --> 00:04:20,709
aşağıdaki linkten "Python Docs" e
ulaşabilrisiniz.

81
00:04:20,709 --> 00:04:23,880
Hepsini bir araya getirirsek,
<i>import math</i> ' i üste eklediğimiz,

82
00:04:23,880 --> 00:04:28,960
alta da <i>math.ceil</i> 
fonksiyonunu eklediğimiz

83
00:04:28,960 --> 00:04:29,726
programımızın son halini göreceğiz.

84
00:04:33,360 --> 00:04:35,950
Şimdi Python değişkenlerini
kullanarak sorularla

85
00:04:35,950 --> 00:04:37,890
alıştırma yapma sırası, sizde!

86
00:04:37,890 --> 00:04:39,509
İyi şanslar.
